rem Code skeleton for Sim-Advanture game
rem byeongchul AT gmail DOT com
[
    Sim-Advanture Game
]

def fn alea{RandomNumber}(x) = int(rnd(peek(78)+peek(79)*256) * x + 1)
goto @prolog

# Subroutines frequently called 
£trigertimer
  tm{inute}% = tm% + 1. 
  if tm%=10 then tm%=0: th{our}%=th%+1
[
for general clock
  ts% = ts% + 1
  if ts% = 360 then ts%=0: th% = th% + 1: gosub @printtime
  if th% = 24 then th%=1: td% = td% + 1
  if td% = tl[td%] then td%=1: tm%=tm%+1
  if tm%=12 then tm%=1: ty%=ty%+1
]
return
£printtime
  cx%=peek(36): cy%=peek(37) # reserving curren cursor
  htab 1: vtab 1: print "HOUR:"; th%; "  DAY:"; td%; "  MONTH:";tm%;"  YEAR:";ty%;"   "
  htab cx%: vtab cy%
return

£drawmap

return

£showwhereiam
  #
return


[
£waitdecision
  # check input
  if peek(-16384)<127 then goto @endwait
  kh% = peek(49152) : poke -16368,0
  if kh% >= 128 then kh% = kh% - 128
  if kh% >= 32 then vtab 4: htab 1: print chr$(kh%); 
#  if kh% < 32 then print chr$(127);
  if chr$(kh%)="Q" then cm% = 0 # END
  j%=uy%: i%=ux%
  if chr$(kh%)="I" then j%=uy%-1: goto @actormove
  if chr$(kh%)="K" then j%=uy%+1: goto @actormove
  if chr$(kh%)="J" then i%=ux%-1: goto @actormove
  if chr$(kh%)="L" then i%=ux%+1: goto @actormove
  goto @endwait
  £actormove
  if (j% <= us%) or (j% > (mh%-us%)) then print chr$(7): goto @endwait
  if (i% <= us%) or (i% > (mw%-us%)) then print chr$(7): goto @endwait
  ux% = i%: uy% = j%
  for l=0 to us%
    htab 5: vtab 5+l
    print mid$(map$(uy%+l), ux%-us%, us%+us%)
  next l
  £endwait
return
]

£waitdecision
  # check input
  if peek(-16384)<127 then return
  kh% = peek(49152) : poke -16368,0
  if kh% >= 128 then kh% = kh% - 128
#  if kh% >= 32 then vtab 4: htab 1: print chr$(kh%); 
  if kh% < 32 then goto @nextcmd
  if chr$(kh%)="Q" then cm% =  0: goto @nextcmd # END
  if chr$(kh%)="L" then cm% =  1: goto @nextcmd
  if chr$(kh%)="E" then cm% =  2: goto @nextcmd
  if chr$(kh%)="I" then cm% =  3: goto @nextcmd
  if chr$(kh%)="M" then cm% =  4: goto @nextcmd
  if chr$(kh%)="V" then cm% =  5: goto @nextcmd
  if chr$(kh%)="P" then cm% =  6: goto @nextcmd
  if chr$(kh%)="S" then cm% =  7: goto @nextcmd
  if chr$(kh%)="T" then cm% =  8: goto @nextcmd
  if chr$(kh%)="H" then cm% =  9: goto @nextcmd
  if chr$(kh%)="F" then cm% = 10: goto @nextcmd
  if chr$(kh%)="C" then cm% = 11: goto @nextcmd
  if chr$(kh%)="R" then cm% = 12: goto @nextcmd
  if chr$(kh%)="W" then cm% = 13: goto @nextcmd
  if chr$(kh%)="J" then cm% = 14 
  £nextcmd
  vtab 19: htab 0: print ">"; chr$(kh%)
  on cm% goto @cmdquit, @cmdlearn, @cmdexercise, @cmdlisten, @cmdmake, @cmdinventory, @cmdmap, @cmdscout, @cmdtrap, @cmdhunting, @cmdfishing, @cmdculture, @cmdtrade, @cmdwork, @cmdjourney
  £cmdlearn
  £cmdexercise
  £cmdlisten
  £cmdmake
  £cmdinventory
  £cmdmap
  £cmdscout
  £cmdtrap
  £cmdhunting
  £cmdfishing
  £cmdculture
  £cmdtrade
  £cmdwork
  £cmdjourney
  £cmdquit
return


£calcnextturn
  #
  # x_i[t+1] = a_i * x_i[t] + b_i
  #
return

#########
#   INIT
#########
£prolog
  gosub @initsys
  gosub @initvar
  gosub @intro


###############
#   MAIN LOOP
###############
£mainloop
  gosub @trigertimer  # timer tick
#  gosub @showwhereiam
  gosub @waitdecision
#  gosub @drawmap
  if cm% = 0 then goto @epilog
  gosub @calcnextturn
  goto @mainloop

#########
#   EXIT
#########
£epilog
end

################
#   SUBROUTINES
################
£intro
  print "INTRO... "
  print "> Press a key!"
  get a$
return

£initvar
  # time and date
  et%= 24 * 365 * 2
  tm%=1: th%=0 # For simple clock
### For general clock
#  ts%=0: th%=0: td%=1: tm%=1: ty%=1 # second, hour, day, month, year
#  dim tl%[13]	# last day of each month
#  tl%[1]=31: tl%[2]=28: tl%[3]=31: tl%[4]=30
#  tl%[5]=31: tl%[6]=30: tl%[7]=31: tl%[8]=31
#  tl%[9]=30: tl%[10]=31: tl%[11]=30: tl%[12]=31
###
  # system var
  i% = 0: j% = 0  # common var 
  tn% = 0 # number of turn
  kh% = 0 # key hit 
  cm% = 9999 # command
###
#         0 : END
#     9999 : INIT & START
###
  # state of simulation
  dim xi%(2,5), ai%(5), bi%(5), yn%(5)
###
#      # xn = ai * xi + bi
#      xi%[0,] : current state
#      xn%[1,] : next state
#      ai%[] : coeffienct of x
#      bi%[] : bias values. 
###
  gosub @mapsetup
  gosub @actorsetup
  gosub @simsetup
  
return



£mapsetup
  dim map$(33): mw%=68 : mh%=32
  #                   111111111122222222223333333333444444444455555555556666666666 
  #         0123456789012345678901234567890123456789012345678901234567890123456789
  map$( 0)="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
  map$( 1)="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~_.,-'=_.-'-._~~~~~~~~~~~~~~~~~~~~"
  map$( 2)="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~._.-'             '-._~~~~~~~~~~~~~~~~"
  map$( 3)="~~~~~~~~~~~~~~~~~~~~~~_.-':_.-'                      '-._~~~~~~~~~~~~"
  map$( 4)="~~~~~~~~~~~~~~~~~~_.-'                                   '-._.'-._~~~"
  map$( 5)="~~~~~~~~~~~.-'.-,'                                                '-."
  map$( 6)="~~~~~~~~~~~'-._                       ^^   ^^                    _.-'"
  map$( 7)="~~~~~~~~~~~~~~~'-.                   ^  ^ ^  ^                ._'~~~~"
  map$( 8)="~~~~~~~~~~~~~~~~~~'-._                 ^^ (           _.'-._,-'~~~~~~"
  map$( 9)="~~~~~~~~~~~~~~~~~~~~~~'-._            ^  ^ )      _.-'~~~~~~~~~~~~~~~"
  map$(10)="~~~~~~~~~~~~~~~~~~~~~~~~.-'               (     .'~~~~~~~~~~~~~~~~~~~"
  map$(11)="~~~~~~~~~~~~~~~~~~~~~~~.-'                 )    '-._.,.~~~~~~~~~~~~~~"
  map$(12)="~~~~~~~~~~~~~~~~~~~~~~~'-._               /           '-._~~~~~~~~~~~"
  map$(13)="~~~~~~~~~~~~~~~~~~~~~~~~~~~'-._          (                '.~~~~~~~~~"
  map$(14)="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~.'          )                '-._~~~~~~"
  map$(15)="~~~~~~~~~~~~~~~~~~~~~~~~~ _.-'           /                   _.'~~~~~"
  map$(16)="~~~~~~~~~~~~~~~~~~~~~~~~~'-._           /                   '-._-'-.~"
  map$(17)="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'-._      (                        _.-'~"
  map$(18)="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'-.    ) ^^            _.-'._,'~~~~~"
  map$(19)="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~_.'   / ^^ ^^         '.~~~~~~~~~~~~"
  map$(20)="~~~~~~~~~~~~~~~~~~~~~~~_.-'-._.-'     / ^  ^  ^          '-._._~~~~~~"
  map$(21)="~~~~~~~~~~~~~~~~~~~_.-'              /                         '-.~~~"
  map$(22)="~~~~~~~~~~~~~~~~.-'              .-'('-._                        '-.~"
  map$(23)="~~~~~~~~~~~~~~_.'         _.-'-.-'~~~~~~~'.             _.'-.-'._  .'"
  map$(24)="~~~~~.-'=_.'-'         .-'~~~~~~~~~~___.-'          _.-'~~~~~~~~~'.'~"
  map$(25)="~~_.-'                 '-._,.-'._.-'               '_~~~~~~~~~~~~~~~~"
  map$(26)=".'                                                    '-._~~~~~~~~~~~"
  map$(27)="'-.- = .-'.                                               '=._~~~~~~~"
  map$(28)="~~~~~~~~~~'._                                                 '-.~~~~"
  map$(29)="~~~~~~~~~~~~~:_                                            _.-'.-'~~~"
  map$(30)="~~~~~~~~~~~~~~~'._,-'.-'._    .-`-._;'-._.='._          .-'~~~~~~~~~~"
  map$(31)="~~~~~~~~~~~~~~~~~~~~~~~~~~'-_.'~~~~~~~~~~~~~~~'-._:'=~_.'~~~~~~~~~~~~"
  map$(32)="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
  #                   111111111122222222223333333333444444444455555555556666666666 
  #         0123456789012345678901234567890123456789012345678901234567890123456789
return

£actorsetup
  ux% =33:uy%=22 # your position on the map
  us% = 3 # sight range
  uu$ ="&"
return


£simsetup # set up state value for your game
  xi%(0,0) = 0
  xi%(0,1) = 0
  xi%(0,2) = 0
  xi%(0,3) = 0
  xi%(0,4) = 0
  xi%(1,0) = 0
  xi%(1,1) = 0
  xi%(1,2) = 0
  xi%(1,3) = 0
  xi%(1,4) = 0
  ai%(0) = 0
  ai%(1) = 0
  ai%(2) = 0
  ai%(3) = 0
  ai%(4) = 0
  bi%(0) = 0
  bi%(1) = 0
  bi%(2) = 0
  bi%(3) = 0
  bi%(4) = 0
return


£genstory
  # event of story
  dim ev%(20,1) # time, event type, max events=20
[
  Event type
         0: no event
      1~99: reserved for internal controls
 2000~6999: for your story
      7000: fortunes
      70nn: coming new families
               nn of persons
      7100: finding new things
      71nn:   nn of item #1 (nn will be determined by random generation)
      8000: reserved for general events
      9000: natural disaster
      90nn: coming new disaster#0 with nn strength
      91nn: coming new disaster#1 with nn strength
]
return


£initsys
  home: &
  gosub @initscreen
return

£initscreen
  print " ISLAND ALONE -- TXT&SIM&ADV GAME EP.01 ";
  print
  print " +--------------+ > NAME: AMOOGAE"
  print " |              | Learn     [---------]" 
  print " |              | Exercise  [---------]"
  print " |              | lIsten    [---------]"
  print " |              | Make      [---------]"
  print " |              | inVentory / maP"
  print " |              |"        
  print " |              | > PEOPLE: 00 / 99"
  print " |              | Scout   01[---------]"
  print " |              | Trap    02[---------]"
  print " |              | Hunting 02[---------]"
  print " |              | Fishing 02[---------]"
  print " |              | Culture 02[---------]"
  print " |              | tRade   02[---------]"
  print " |              | Work    02[---------]"                    
  print " +--------------+ Jouney  04[---------]"             
return
[
SCREEN LAYOUT
              111111111122222222223333333333 
    0123456789012345678901234567890123456789
  00 ISLAND ALONE -- TXT&SIM&ADV GAME EP.01
  01 
  02 +--------------+ NAME: AMOOGAE
  03 |              | LEARN     [---------] 
  04 |              | EXERCISE  [---------] 
  05 |              | LISTEN    [---------]    / WANDERING
  06 |              | MAKE      [---------]    / ADDRESS
  07 |              |                          / MAKE TOGETHER
  08 |              | PEOPLE: 00 / 99       
  09 |              | SCOUT   01[---------] 
  10 |              | TRAP    02[---------] 
  11 |              | HUNTING 02[---------] 
  12 |              | FISHING 02[---------] 
  13 |              | CULTURE 02[---------] 
  14 |              | TRADE   02[---------] 
  15 |              | WORK    02[---------] 
  16 |              |                       
  17 +--------------+ EXPEDITION[---------]              
  18 
  19 >
  20 
  21
  22
  23
]

